{
  "name": "weather-neighborhood-backend",
  "version": "1.0.0",
  "description": "Backend API for neighborhood weather emergency coordination app",
  "main": "src/server.js",
  "scripts": {
    "start": "node src/server.js",
    "dev": "nodemon src/server.js",
    "dev:debug": "nodemon --inspect src/server.js",
    "test": "NODE_ENV=test jest --verbose --detectOpenHandles --forceExit",
    "test:watch": "NODE_ENV=test jest --watch --verbose",
    "test:coverage": "NODE_ENV=test jest --coverage --verbose --forceExit",
    "test:ci": "NODE_ENV=test jest --ci --coverage --watchAll=false --forceExit --maxWorkers=2",
    "db:test": "node scripts/test-setup.js",
    "db:setup": "node scripts/test-setup.js schema",
    "db:reset": "npm run db:setup",
    "lint": "eslint src/ tests/ --fix --ext .js",
    "lint:check": "eslint src/ tests/ --ext .js",
    "lint:fix": "eslint src/ tests/ --fix --ext .js",
    "format": "prettier --write src/ tests/ *.js",
    "format:check": "prettier --check src/ tests/ *.js",
    "format:fix": "prettier --write src/ tests/ *.js",
    "security:audit": "npm audit --audit-level=moderate",
    "security:fix": "npm audit fix",
    "security:check": "npm audit --audit-level=high --dry-run",
    "build": "echo 'Build step - validating environment' && npm run env:check",
    "build:prod": "NODE_ENV=production npm run build",
    "ci:install": "npm ci --prefer-offline --no-audit",
    "ci:test": "npm run lint:check && npm run format:check && npm run test:ci",
    "ci:security": "npm run security:audit",
    "ci:build": "npm run build && npm run security:check",
    "ci:full": "npm run ci:install && npm run ci:test && npm run ci:security && npm run ci:build",
    "deploy:staging": "railway up --service stormneighbor-backend-staging",
    "deploy:production": "railway up --service stormneighbor-backend-prod",
    "health:check": "node -e \"require('./src/app'); console.log('App loads successfully')\"",
    "health:db": "node -e \"require('./src/config/database').testConnection()\"",
    "health:full": "npm run health:check && npm run health:db",
    "health:staging": "curl -f https://stormneighbor-backend-staging.up.railway.app/health",
    "health:production": "curl -f https://stormneighbor-backend-production.up.railway.app/health",
    "logs": "railway logs --service stormneighbor-backend-staging",
    "logs:prod": "railway logs --service stormneighbor-backend-prod",
    "logs:local": "tail -f *.log",
    "clean": "rm -rf node_modules coverage .nyc_output *.log",
    "clean:all": "npm run clean && rm -rf .backup",
    "reset": "npm run clean && npm install && npm run db:reset",
    "precommit": "npm run lint:check && npm run format:check && npm run test",
    "prepush": "npm run ci:test && npm run db:test",
    "postinstall": "echo 'StormNeighbor Backend dependencies installed successfully!'",
    "env:check": "node -e \"require('./src/config/validateEnv')()\"",
    "env:test": "node -e \"require('./src/config/database').testConnection()\"",
    "env:setup": "npm run env:check && npm run env:test",
    "setup": "npm run db:test && npm run db:setup",
    "setup:fresh": "npm run clean && npm install && npm run setup"
  },
  "dependencies": {
    "axios": "^1.11.0",
    "bcryptjs": "^2.4.3",
    "cloudinary": "^1.41.3",
    "compression": "^1.7.4",
    "cors": "^2.8.5",
    "dotenv": "^16.6.1",
    "express": "^4.18.2",
    "express-rate-limit": "^7.1.5",
    "express-validator": "^7.0.1",
    "firebase-admin": "^13.4.0",
    "helmet": "^7.1.0",
    "isomorphic-dompurify": "^1.9.0",
    "jsdom": "^26.1.0",
    "jsonwebtoken": "^9.0.2",
    "morgan": "^1.10.0",
    "multer": "^1.4.5-lts.1",
    "multer-storage-cloudinary": "^4.0.0",
    "node-cron": "^3.0.3",
    "pg": "^8.11.3",
    "resend": "^3.0.0",
    "socket.io": "^4.7.4"
  },
  "devDependencies": {
    "@types/node": "^20.10.5",
    "eslint": "^8.57.1",
    "jest": "^29.7.0",
    "nodemon": "^3.0.2",
    "prettier": "^3.6.2",
    "supertest": "^6.3.4"
  },
  "jest": {
    "testEnvironment": "node",
    "collectCoverageFrom": [
      "src/**/*.js",
      "!src/server.js",
      "!src/**/*.test.js"
    ],
    "coverageDirectory": "coverage",
    "coverageReporters": [
      "text",
      "lcov",
      "html",
      "json-summary"
    ],
    "testMatch": [
      "**/tests/**/*.test.js",
      "**/src/**/*.test.js"
    ],
    "setupFilesAfterEnv": [
      "<rootDir>/tests/setup.js"
    ],
    "testTimeout": 30000,
    "verbose": true,
    "detectOpenHandles": true,
    "forceExit": true,
    "maxWorkers": "50%"
  },
  "prettier": {
    "semi": true,
    "singleQuote": false,
    "trailingComma": "es5",
    "tabWidth": 2,
    "printWidth": 100,
    "arrowParens": "always",
    "endOfLine": "lf"
  },
  "keywords": [
    "weather",
    "emergency",
    "neighborhood",
    "api",
    "nodejs",
    "express",
    "postgresql",
    "postgis",
    "real-time",
    "socket.io",
    "ci-cd"
  ],
  "author": "Jacob Leon",
  "license": "MIT",
  "engines": {
    "node": ">=18.0.0",
    "npm": ">=8.0.0"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/jacobleon2117/stormneighbor-app.git"
  },
  "bugs": {
    "url": "https://github.com/jacobleon2117/stormneighbor-app/issues"
  },
  "homepage": "https://github.com/jacobleon2117/stormneighbor-app#readme"
}
